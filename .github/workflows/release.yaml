# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
---
name: Release

# Trigger on any tag creation:
on:
  push:
    tags:
      - "*"

jobs:
  build-and-release:
    name: Build and release
    uses: asimov-modules/.github/.github/workflows/build-and-release-rust-module.yaml@master
    permissions:
      contents: read
      packages: write
    secrets: inherit
    with:
      update_homebrew_tap: true
      update_scoop_bucket: true
      link_old_glibc: false
      build-linux-x86-musl: false
      build-linux-arm-gnu: false
      build-linux-arm-musl: false
      build-windows-native: true
      tweet_release: false
      rust_toolchain: "1.88.0"
      brew_build_depends_on: |
        openssl@3
        zlib
      linux_dependencies: |
        echo "man-db man-db/auto-update boolean false" | sudo debconf-set-selections
        sudo rm /var/lib/man-db/auto-update
        sudo apt-get update
        sudo apt-get install -y libc++-dev libc++abi-dev libgtk2.0-dev libatk1.0-dev libgtk-3-dev libxdo-dev
      windows_dependencies: |
        vcpkg install zlib:x64-windows-static-md
        echo "OPENSSL_ROOT=$env:ProgramFiles\OpenSSL" >> $env:GITHUB_ENV
        echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" >> $env:GITHUB_ENV
      brew_install_step: |
        if OS.linux?
          ENV["RUSTFLAGS"] = "-L /usr/lib/x86_64-linux-gnu"
          system "sudo", "apt-get", "install", "-y", "libc++-dev", "libc++abi-dev"
        end
      brew_macos_x86_dependencies: |
        # https://github.com/actions/runner-images/issues/9966
        brew list -1 | grep python@ | while read formula; do
            brew unlink $formula
            brew link --overwrite $formula
        done
